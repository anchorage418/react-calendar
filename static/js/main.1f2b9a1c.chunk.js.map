{"version":3,"sources":["serviceWorker.js","styles/theme.js","actions/index.js","utils/index.js","reducers/webDatabase.js","reducers/modal.js","reducers/index.js","components/Calendar.jsx","styles/calendar.js","components/Modal.jsx","components/TotalEventsDayModal.jsx","styles/totalEventsModal.js","components/SingleEventModal.jsx","styles/singleEventModal.js","components/EditEventModal.jsx","styles/editEventModal.js","containers/Main.jsx","actions/database.js","actions/ui.js","styles/main.js","containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","createMuiTheme","typography","useNextVariants","palette","error","fontFamily","join","GET_EVENTS","ADD_EVENT","DELETE_EVENT","SELECTED_DAY","SELECTED_EVENT","TOGGLE_MODAL","FORMAT","setToStorage","key","value","localStorage","setItem","JSON","stringify","getFromStorage","parse","getItem","initalState","db_created","events","currentMonthTimeSpan","selectedDay","selectedEvent","totalDayEvents","singleEvent","addEvent","editEvent","rootReducer","combineReducers","webDatabase","state","arguments","length","undefined","action","type","_action$monthPeriod","monthPeriod","startDate","endDate","monthEvents","startDateMoment","moment","endDateMoment","sortedEvents","forEach","event","eventStartMoment","event_start","eventEndMoment","event_end","isSameOrAfter","isSameOrBefore","push","sortBy","obj","getMonthEvents","result","day","date","Object","objectSpread","storage","eventToDelete","newArr","isEqual","deleteEvent","modalState","settings","WEEK_DAYS","WEEK_TOTAL","Calendar","step","getMonthInterval","startOf","format","endOf","prevHandler","_this$state","_this","setState","subtract","nextHandler","_this$state2","add","renderCalendarHeader","classes","props","_this$dates","dates","currentYear","formatedMonth","react_default","a","createElement","react","className","calendar_header__title","concat","action_btn_container","index_es","onClick","variant","color","fullWidth","icons_index_es","style","marginLeft","week_day__list","map","index","week_day__item","renderCalendarBody","_this$dates2","daysInMonth","startDay","endDay","pastDays","lastDays","resultArr","cellsArr","i","j","rowDiv","cells_row","renderCalendarCell","isoWeekday","isEmpty","eventTooltipHandler","_this$props","selectDay","toggleModal","disabled","_this$props2","addEventHandler","currentDay","fullDate","itemKey","currenDayClass","current_day","disabledDayClass","disabled_day","pastDayClass","past_day","isActiveClass","isActive_day","cellClasses","cell","cell__overlay","events_counter_tooltip","fontSize","root","cell__add_btn","_this$props3","this","getEvents","monthInterval","prevProps","prevState","_this$props4","isSame","calendar__root","calendar_header","calendar_body","_this$state3","year","currentMonth","month","currentWeekDay","Component","withStyles","theme","marginBottom","margin","textAlign","defineProperty","position","width","height","padding","display","borderRight","&:first-child","borderLeft","breakpoints","down","&:hover","backgroundColor","fontWeight","borderBottom","borderTop","listStyleType","alignItems","top","bottom","left","right","justifyContent","&:hover .events_counter","&:hover .cell__add_btn","cursor","borderRadius","maxWidth","FULLSCREENSIZE","Modal","fullScreen","updateWindowDimensions","innerWidth","closeHandler","closeCallback","dialog","addEventListener","removeEventListener","_this2","open","ref","node","onClose","children","TotalEventsDayModal","eventClickHandler","selectEvent","renderEventItem","event_item","event_title","components_Modal","modal__content","title","modal__body","modal__btn_wrapper","Button_default","border","SingleEventModal","editEventHandler","deleteEventHandler","monthTimeSpan","_this$props2$selected","event_desc","formatedStartDate","formatedEndDate","modal__title","dates_range","event_description","EditEventModal","eventTitle","eventDesc","eventStart","eventEnd","eventStartInvalid","eventEndInvalid","eventStartIsLater","eventTitleInvalid","eventDescInvalid","closeAddModalHandler","closeEditModalHandler","changeHandler","e","elId","target","id","elValue","startDatePickerHandler","endDatePickerHandler","validate","editModal","addModal","validEventTitle","trim","validEventDesc","valid","isValid","newEvent","renderForm","TextField_default","label","onChange","DateTimePicker_default","invalidLabel","clearable","dateRangeIcon","timeIcon","leftArrowIcon","rightArrowIcon","multiline","rows","renderAddModal","renderEditModal","renderContent","_this$props5","dayToAddEvents","_this$props5$selected","dayToAddEventsStart","console","log","dayToAddEventsEnd","Main","main_container","elevation","components_Calendar","components_TotalEventsDayModal","components_SingleEventModal","components_EditEventModal","connect","dispatch","actions","App","containers_Main","store","createStore","applyMiddleware","apply","ReactDOM","render","es","MuiThemeProvider_default","MuiPickersUtilsProvider_default","utils","MomentUtils","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f2b9a1c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    palette: {\n      error: '#b71c1c',\n    },\n    fontFamily: [\n      'Arial',\n      'sans-serif',\n    ].join(','),\n  },\n});","import {\n  getEvents,\n  selectDay,\n  selectEvent,\n  addEvent,\n  deleteEvent,\n} from './database';\nimport {\n  toggleModal,\n} from './ui';\n\nexport const GET_EVENTS = 'GET_EVENTS';\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\nexport const SELECTED_DAY = 'SELECTED_DAY';\nexport const SELECTED_EVENT = 'SELECTED_EVENT';\n\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL';\n\nexport {\n  getEvents,\n  toggleModal,\n  selectDay,\n  selectEvent,\n  addEvent,\n  deleteEvent,\n}\n","import moment from 'moment';\nimport { forEach, sortBy, isEqual } from 'lodash';\n\nconst FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nconst setToStorage = (key, value) => {\n  if (window && window.localStorage) {\n    const localStorage = window.localStorage;\n    localStorage.setItem(key, JSON.stringify(value));\n  } \n};\n\nconst getFromStorage = (key) => {\n  if (window && window.localStorage) {\n    const localStorage = window.localStorage;\n    return (JSON.parse(localStorage.getItem(key)) || []);\n  }\n};\n\nconst getMonthEvents = (startDate, endDate) => {\n  const startDateMoment = moment(startDate, FORMAT);\n  const endDateMoment = moment(endDate, FORMAT);\n  const events = getFromStorage('calendar_events');\n  let sortedEvents = [];\n  forEach(events, (event) => {\n    const eventStartMoment = moment(event.event_start, FORMAT);\n    const eventEndMoment = moment(event.event_end, FORMAT);\n    if (eventStartMoment.isSameOrAfter(startDateMoment) && eventEndMoment.isSameOrBefore(endDateMoment)) {\n      sortedEvents.push(event);\n    }\n  });\n  sortedEvents = sortBy(sortedEvents, [(obj) => obj.event_start])\n  return sortedEvents;\n};\n\nconst addEvent = (event) => {\n  const storage = getFromStorage('calendar_events');\n  storage.push(event);\n  setToStorage('calendar_events', storage);\n}\n\nconst deleteEvent = (eventToDelete) => {\n  const events = getFromStorage('calendar_events');\n  let newArr = [];\n  forEach(events, (event) => {\n    if (!isEqual(event, eventToDelete)) {\n      newArr.push(event);\n    }\n  });\n  setToStorage('calendar_events', newArr);\n}\n\nexport {\n  setToStorage,\n  getFromStorage,\n  getMonthEvents,\n  addEvent,\n  deleteEvent,\n};\n","import moment from 'moment';\nimport { forEach } from 'lodash';\n\nimport {\n  GET_EVENTS,\n  SELECTED_DAY,\n  SELECTED_EVENT,\n  ADD_EVENT,\n  DELETE_EVENT,\n} from '../actions/index';\nimport { \n  getMonthEvents,\n  addEvent,\n  deleteEvent,\n} from '../utils';\n\nconst FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nconst initalState = {\n  db_created: false,\n  events: [],\n  currentMonthTimeSpan: {},\n  selectedDay: [],\n  selectedEvent: {},\n};\n\nexport default (state = initalState, action) => {\n  switch(action.type) {\n    case GET_EVENTS:\n      const { startDate, endDate } = action.monthPeriod;\n      const monthEvents =  getMonthEvents(startDate, endDate);\n      let result = [];\n      forEach(monthEvents, (event) => {\n        const day = moment(event.event_start, FORMAT).date();\n        if (result[day]) {\n          result[day].push(event);\n        } else {\n          result[day] = [event];\n        }\n      });\n      return {...state, events: result, currentMonthTimeSpan: { startDate, endDate }};\n    case ADD_EVENT:\n      addEvent(action.event);\n      return {...state};\n    case DELETE_EVENT:\n      deleteEvent(action.event);\n      return {...state};\n    case SELECTED_DAY:\n      return {...state, selectedDay: action.day};\n    case SELECTED_EVENT:\n      return {...state, selectedEvent: action.event};\n    default:\n      return state;\n  }\n}\n","import {\n  TOGGLE_MODAL,\n} from '../actions'\n\nconst initalState = {\n  totalDayEvents: false,\n  singleEvent: false,\n  addEvent: false,\n  editEvent: false,\n};\n\nexport default (state = initalState, action) => {\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      return {...state, ...action.settings};\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport webDatabase from './webDatabase';\nimport modalState from './modal';\n\nconst rootReducer = combineReducers({\n  webDatabase,\n  modalState,\n});\n\nexport default rootReducer;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { map, isEmpty, isEqual } from 'lodash';\nimport { Button } from '@material-ui/core';\nimport { NavigateBefore, NavigateNext, AddCircle, Event } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport calendarStyles from '../styles/calendar';\n\nconst WEEK_DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\nconst WEEK_TOTAL = 7;\nconst FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nclass Calendar extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    value: PropTypes.string,\n    format: PropTypes.string.isRequired,\n    getEvents: PropTypes.func.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    selectDay: PropTypes.func.isRequired,\n    selectedDay: PropTypes.array,\n  };\n\n  state = {\n    value: moment(),  \n    step: 0,\n  };\n\n  componentDidMount() {\n    const { value, format, getEvents } = this.props;\n    const { date } = this.dates;\n    const monthInterval = this.getMonthInterval(date);\n\n    if (value) {\n      this.setState({\n        value: moment(value, format),\n      });\n    }\n    getEvents(monthInterval);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { getEvents, events, selectDay, selectedDay, value, format } = this.props;\n    const { step } = this.state;\n    const { date } = this.dates;\n    const monthInterval = this.getMonthInterval(date);\n\n    if (value && prevState.value.isSame(value)) {\n      this.setState({\n        value: moment(value, format),\n      });\n    }\n\n    if (prevState.step !== step) {\n      getEvents(monthInterval);\n    }\n\n    if (selectedDay && selectedDay[0] && !isEqual(events, prevProps.events)) {\n      const day = moment(selectedDay[0].event_start).date();\n      const eventsDay = events[day] ? events[day] : [];\n      selectDay(eventsDay);\n    }\n  }\n\n  get dates() {\n    const { value, format } = this.state;\n\n    const date = moment(value, format);\n    const currentYear = date.year();\n    const currentMonth = date.month() + 1;\n    const currentDay = date.date();\n    const currentWeekDay = date.isoWeekday();\n    const startDay = date.startOf('month').isoWeekday();\n    const endDay = date.endOf('month').isoWeekday();\n    const daysInMonth = date.endOf('month').date(); \n\n    return {\n      date,\n      currentYear,\n      currentMonth,\n      currentDay,\n      currentWeekDay,\n      startDay,\n      endDay,\n      daysInMonth,\n    }; \n  }\n\n  getMonthInterval = (date) => {\n    // \"YYYY-MM-DD HH:MM:SS\" format is required\n    const startDate = date.startOf('month').format(FORMAT);\n    const endDate = date.endOf('month').format(FORMAT);\n    return { startDate, endDate };\n  };\n\n  prevHandler = () => {\n    let { step, value } = this.state;\n\n    if (step > 0) {\n      this.setState({\n        step: step - 1,\n        value: value.subtract(1, 'M')\n      });\n    }\n  };\n\n  nextHandler = () => {\n    let { step, value } = this.state;\n\n    this.setState({\n      step: step + 1, \n      value: value.add(1, 'M')\n    });\n  };\n\n  renderCalendarHeader = () => {\n    const { classes } = this.props;\n    const { date, currentYear } = this.dates;\n    const formatedMonth = date.format('MMMM');\n\n    return (\n      <Fragment>\n        <div>\n          <h1 className={classes.calendar_header__title}>\n            {`${formatedMonth} ${currentYear}`}\n          </h1>\n        </div>\n        <div className={classes.action_btn_container}>\n          <Button \n            onClick={this.prevHandler} \n            variant=\"contained\" \n            color=\"primary\"\n            fullWidth\n          >\n            <NavigateBefore />\n            Prev\n          </Button>\n          <Button \n            style={{marginLeft: '15px'}} \n            onClick={this.nextHandler} \n            variant=\"contained\" \n            color=\"primary\"\n            fullWidth\n          >\n            Next\n            <NavigateNext />\n          </Button>\n        </div>\n        <ul className={classes.week_day__list}>\n          {map(WEEK_DAYS, (day, index) => {\n              return (\n                <li className={classes.week_day__item} key={`week_day__item_${index}`}>\n                  {day}\n                </li>\n              )\n            })}\n        </ul>\n      </Fragment>\n    );\n  };\n  \n  renderCalendarBody = () => {\n    const { date, daysInMonth, startDay, endDay } = this.dates;\n    const { classes } = this.props;\n\n    const pastDays = startDay !== 1 ? WEEK_TOTAL - ((WEEK_TOTAL + 1) - startDay) : null;\n    const lastDays = endDay !== 7 ? WEEK_TOTAL - endDay : null;\n\n    let resultArr = [];\n    let cellsArr = [];\n    let i = 1;\n    let j = 1;\n    let rowDiv = <div className={classes.cells_row} key={`cells_row__${i}`}>{cellsArr}</div>;\n\n    if (pastDays) {\n      while (j <= pastDays) {\n        cellsArr.push(this.renderCalendarCell(j, true));\n        j++;\n      }\n      j = 1;\n    }\n    while(i <= daysInMonth) {\n      if (date.date(i).isoWeekday() !== WEEK_TOTAL) {\n        cellsArr.push(this.renderCalendarCell(i))\n      } else if (date.date(i).isoWeekday() === WEEK_TOTAL) {\n        cellsArr.push(this.renderCalendarCell(i));\n        resultArr.push(rowDiv);\n        cellsArr = [];\n        rowDiv = <div className={classes.cells_row} key={`cells_row__${i}`}>{cellsArr}</div>;\n      }\n      if (i === daysInMonth && !isEmpty(cellsArr)) {\n        while (j <= lastDays) {\n          cellsArr.push(this.renderCalendarCell(j + i, true));\n          j++;\n        }\n        resultArr.push(rowDiv);\n      }\n      i++;\n    }\n\n    return (\n      resultArr\n    );\n  };\n\n  eventTooltipHandler = (day) => {\n    const { selectDay, events, toggleModal, selectedDay } = this.props;\n    const settings = {\n      totalDayEvents: true,\n    };\n    if (!isEqual(events[day], selectedDay)) {\n      selectDay(events[day]);\n    }\n    toggleModal(settings);\n  };\n\n  renderCalendarCell = (date, disabled = false) => {\n    const { step } = this.state; \n    const { classes, events, addEventHandler } = this.props;\n    const { currentDay } = this.dates;\n    const fullDate = (moment().date(date)).format('YYYY-MM-DD');\n\n    const day = disabled ? '' : date;\n    const itemKey = disabled ? `disabled_cell__${date}` : `cell__${date}`;\n\n    const currenDayClass = step === 0 && !disabled && currentDay === date ? classes.current_day : '';\n    const disabledDayClass = disabled ? classes.disabled_day : '';\n    const pastDayClass = step === 0 && !disabled && date < currentDay ? classes.past_day : '';\n    const isActiveClass = !disabledDayClass && !pastDayClass ? classes.isActive_day : '';\n\n    const cellClasses = `${classes.cell} ${isActiveClass} ${currenDayClass} ${disabledDayClass} ${pastDayClass}`;\n\n    return (\n      <div className={cellClasses} key={itemKey}>\n        {day}\n        {isActiveClass &&\n          <div className={classes.cell__overlay}>\n            {events && events[date] &&\n              <div \n                className={`${classes.events_counter_tooltip} events_counter`}\n                onClick={() => this.eventTooltipHandler(date)}\n              >\n                {events[date].length}\n                <Event fontSize=\"small\" />\n              </div>\n            }\n            {events && !events[date] &&\n              <AddCircle \n                fontSize=\"large\"\n                className=\"cell__add_btn\"\n                classes={{ root: classes.cell__add_btn }}\n                onClick={() => addEventHandler(fullDate)}\n              />\n            }\n          </div>\n        }\n      </div>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.calendar__root}>\n        <div className={classes.calendar_header}>\n          {this.renderCalendarHeader()}\n        </div>\n        <div className={classes.calendar_body}>\n          {this.renderCalendarBody()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(calendarStyles)(Calendar);\n","export default (theme) => ({\n  calendar__root: {\n\n  },\n  calendar_header: {\n\n  },\n  calendar_body: {\n    marginBottom: '18px',\n  },\n  calendar_header__title: {\n    margin: '10px 0',\n    textAlign: 'center',\n  },\n  cell: {\n    position: 'relative',\n    width: '100%',\n    height: '100px',\n    padding: '6px',\n    display: 'flex',\n    borderRight: '1px solid rgba(128, 128, 128, 0.21)',\n    '&:first-child': {\n      borderLeft: '1px solid rgba(128, 128, 128, 0.21)',\n    },\n    fontSize: '30px',\n    [theme.breakpoints.down('sm')]: {\n      height: '80px',\n      padding: '0 6px',\n      fontSize: '22px',\n    },\n  },\n  isActive_day: {\n    '&:hover': {\n      backgroundColor: '#3f51b5',\n      color: '#fff',\n    },\n  },\n  current_day: {\n    fontWeight: 'bold',\n  },\n  cells_row: {\n    display: 'flex',\n    borderBottom: '1px solid rgba(128, 128, 128, 0.21)',\n    '&:first-child': {\n      borderTop: '1px solid rgba(128, 128, 128, 0.21)',\n    },\n  },\n  disabled_day: {\n    backgroundColor: 'rgba(128, 128, 128, 0.28)',\n  },\n  past_day: {\n    color: 'rgba(48, 63, 159, 0.56)',\n  },\n  week_day__list: {\n    display: 'flex',\n    padding: 0,\n    listStyleType: 'none',\n  },\n  week_day__item: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    height: '40px',\n    fontSize: '24px',\n    [theme.breakpoints.down('sm')]: {\n      height: '30px',\n      fontSize: '20px',\n    },\n  },\n  cell__overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover .events_counter': {\n      backgroundColor: '#fff',\n      color: '#3f51b5',\n    },\n    '&:hover .cell__add_btn': {\n      display: 'block',\n    }\n  },\n  cell__add_btn: {\n    display: 'none',\n    cursor: 'pointer',\n  },\n  events_counter_tooltip: {\n    position: 'absolute',\n    bottom: '2px',\n    left: 0,\n    right: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    width: '95%',\n    height: '36px',\n    margin: '0 auto',\n    padding: '4px 0',\n    backgroundColor: '#3f51b5',\n    color: '#fff',\n    borderRadius: '6px',\n    fontSize: '24px',\n    cursor: 'pointer',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '20px',\n    },\n  },\n  action_btn_container: {\n    maxWidth: '600px',\n    margin: '0 auto',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, Typography } from '@material-ui/core';\n\nconst FULLSCREENSIZE = 600;\n\nclass Modal extends Component {\n  static propTypes = {\n    open: PropTypes.bool.isRequired,\n    closeCallback: PropTypes.func.isRequired,\n  };\n\n  state = {\n    fullScreen: false,\n  }\n\n  componentDidMount() {\n    if (this.dialog && window) {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.dialog && window) {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({\n      fullScreen: window.innerWidth < FULLSCREENSIZE,\n    });\n  };\n\n  closeHandler = () => {\n    const { closeCallback } = this.props;\n    closeCallback();\n  };\n  \n  render() {\n    const { open } = this.props;\n    const { fullScreen } = this.state;\n\n    return (\n      <Dialog\n        ref={node => (this.dialog = node)}\n        fullScreen={fullScreen}\t\n        open={open}\n        onClose={this.closeHandler}\n      >\n        <Typography>\n          {this.props.children}\n        </Typography>\n      </Dialog>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { map, isEqual, isEmpty } from 'lodash';\nimport totalEventsModalStyles from '../styles/totalEventsModal';\n\nclass TotalEventsDayModal extends Component {\n  static propTypes = {\n    open: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    selectedDay: PropTypes.array.isRequired,\n    selectEvent: PropTypes.func.isRequired,\n    selectedEvent: PropTypes.object.isRequired,\n    addEventHandler: PropTypes.func.isRequired,\n    modalState: PropTypes.object.isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { selectedDay, toggleModal, modalState } = this.props;\n\n    if (!isEqual(prevProps.selectedDay, selectedDay) && isEmpty(selectedDay)) {\n      this.closeHandler();\n    }\n    if (!isEqual(prevProps.selectedDay, selectedDay) && modalState.singleEvent) {\n      toggleModal({ singleEvent: false });\n    }\n  }\n\n  closeHandler = () => {\n    const { toggleModal } = this.props;\n    const settings = {\n      totalDayEvents: false,\n    };\n    toggleModal(settings);\n  };\n\n  eventClickHandler = (event) => {\n    const { toggleModal, selectEvent, selectedEvent } = this.props;\n    const settings = {\n      singleEvent: true,\n    };\n    if (!isEqual(selectedEvent, event)) {\n      selectEvent(event);\n    }\n    toggleModal(settings);\n  };\n\n  renderEventItem = () => {\n    const { classes, selectedDay } = this.props;\n\n    return map(selectedDay, (event, index) => (\n      <div \n        className={classes.event_item} \n        key={`totalEventsModal_event_item__${index}`}\n        onClick={() => this.eventClickHandler(event)}\n      >\n        {event.event_title}\n      </div>\n    ));\n  };\n\n  render() {\n    const { open, classes, addEventHandler } = this.props;\n\n    return (\n      <Modal\n        open={open}\n        closeCallback={this.closeHandler}\n      >\n        <div className={classes.modal__content}>\n          <h2 className={classes.title}>\n            Events List\n          </h2>\n          <div className={classes.modal__body}>\n            {this.renderEventItem()}\n          </div>\n          <div className={classes.modal__btn_wrapper}>\n            <Button \n              color=\"primary\" \n              variant=\"contained\"\n              onClick={() => addEventHandler()}\n            >\n              Add event\n            </Button>\n            <Button onClick={this.closeHandler}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default withStyles(totalEventsModalStyles)(TotalEventsDayModal);\n","export default (theme) => ({\n  modal__content: {\n    width: '500px',\n    padding: '10px',\n    [theme.breakpoints.down('601')]: {\n      width: '100%',\n    },\n  },\n  title: {\n    textAlign: 'center',\n  },\n  modal__body: {\n    padding: '0 20px 20px',\n  },\n  modal__btn_wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  event_item: {\n    marginBottom: '14px',\n    padding: '10px',\n    border: '1px solid #303f9f',\n    borderRadius: '4px',\n    fontSize: '20px',\n    '&:hover': {\n      backgroundColor: 'rgba(48, 63, 159, 0.2)',\n      color: '#303f9f',\n      cursor: 'pointer',\n    }\n  },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Modal from './Modal';\nimport Button from '@material-ui/core/Button';\nimport { Edit, Delete } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport singleEventModalStyles from '../styles/singleEventModal';\n\nconst FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nclass SingleEventModal extends Component {\n  static propTypes = {\n    open: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    selectEvent: PropTypes.func,\n    deleteEvent: PropTypes.func.isRequired,\n    selectedEvent: PropTypes.object.isRequired,\n    monthTimeSpan: PropTypes.object.isRequired,\n    getEvents: PropTypes.func.isRequired,\n  };\n\n  closeHandler = () => {\n    const { toggleModal } = this.props;\n    const settings = {\n      singleEvent: false,\n    };\n    toggleModal(settings);\n  };\n\n  editEventHandler = () => {\n    const { toggleModal } = this.props;\n    const settings = {\n      editEvent: true,\n    };\n    toggleModal(settings);\n  };\n\n  deleteEventHandler = () => {\n    const { selectedEvent, deleteEvent, monthTimeSpan, getEvents } = this.props;\n    deleteEvent(selectedEvent);\n    getEvents(monthTimeSpan);\n    this.closeHandler();\n  };\n\n  render() {\n    const {\n      open, \n      classes, \n      selectedEvent: { event_title, event_desc, event_start, event_end } \n    } = this.props;\n    const formatedStartDate = moment(event_start).format(FORMAT);\n    const formatedEndDate = moment(event_end).format(FORMAT);\n\n    return (\n      <Modal\n        open={open}\n        closeCallback={this.closeHandler}\n      >\n        <div className={classes.modal__content}>\n          <h2 className={classes.modal__title}>\n            {event_title}\n          </h2>\n          <div className={classes.modal__body}>\n            <div className={classes.dates_range}>\n              {formatedStartDate} - {formatedEndDate}\n            </div>\n            <div className={classes.event_description}>\n              {event_desc}\n            </div>\n          </div>\n          <div className={classes.modal__btn_wrapper}>\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.editEventHandler}\n            >\n              Edit\n              <Edit />\n            </Button>\n            <Button onClick={this.closeHandler}>\n              Cancel\n            </Button>\n            <Button \n              variant=\"contained\"\n              onClick={this.deleteEventHandler}\n            >\n              Delete\n              <Delete />\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default withStyles(singleEventModalStyles)(SingleEventModal);\n","export default (theme) => ({\n  modal__content: {\n    width: '400px',\n    padding: '10px',\n    [theme.breakpoints.down('601')]: {\n      width: '100%',\n    },\n  },\n  modal__title: {\n    textAlign: 'center',\n  },\n  dates_range: {\n    padding: '10px 0 20px',\n    textAlign: 'center'\n  },\n  event_description: {\n    marginBottom: '20px',\n    padding: '20px',\n    backgroundColor: '#e6e6e6',\n  },\n  modal__btn_wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport DateTimePicker from 'material-ui-pickers/DateTimePicker';\nimport { \n  KeyboardArrowLeft, \n  KeyboardArrowRight,\n  DateRange,\n  AccessTime, \n} from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { trim } from 'lodash';\nimport editEventModalStyles from '../styles/editEventModal';\n\nconst FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nclass EditEventModal extends Component {\n  static propTypes = {\n    toggleModal: PropTypes.func.isRequired,\n    editModal: PropTypes.bool.isRequired,\n    addModal: PropTypes.bool.isRequired,\n    addEvent: PropTypes.func.isRequired,\n    getEvents: PropTypes.func.isRequired,\n    deleteEvent: PropTypes.func.isRequired,\n    monthTimeSpan: PropTypes.object.isRequired,\n    selectedEvent: PropTypes.object.isRequired,\n  };\n\n  state = {\n    eventTitle: '',\n    eventDesc: '',\n    eventStart: '',\n    eventEnd: '',\n    eventStartInvalid: false,\n    eventEndInvalid: false,\n    eventStartIsLater: false,\n    eventTitleInvalid: false,\n    eventDescInvalid: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { \n      editModal,\n      addModal,\n      dayToAddEvents,\n      selectedEvent: { \n        event_title, \n        event_desc, \n        event_start, \n        event_end,\n      },\n    } = this.props;\n    \n    if (prevProps.editModal !== editModal && editModal) {\n      this.setState({\n        eventTitle: event_title,\n        eventDesc: event_desc,\n        eventStart: event_start,\n        eventEnd: event_end,\n      });\n    } else if (prevProps.addModal !== addModal && addModal) {\n      if (prevProps.dayToAddEvents !== dayToAddEvents && !dayToAddEvents) {\n        this.setState({\n          eventTitle: '',\n          eventDesc: '',\n          eventStart: '',\n          eventEnd: '',\n        });\n      } else {\n        const dayToAddEventsStart = moment(dayToAddEvents).startOf('day').format(FORMAT);\n        console.log('dayToAddEventsStart', dayToAddEventsStart);\n        const dayToAddEventsEnd = moment(dayToAddEvents).endOf('day').format(FORMAT);\n        this.setState({\n          eventTitle: '',\n          eventDesc: '',\n          eventStart: dayToAddEventsStart,\n          eventEnd: dayToAddEventsEnd,\n        });\n      }\n    }\n  }\n\n  closeAddModalHandler = () => {\n    const { toggleModal } = this.props;\n    const settings = {\n      addEvent: false,\n    };\n    toggleModal(settings);\n  };\n\n  closeEditModalHandler = () => {\n    const { toggleModal } = this.props;\n    const settings = {\n      editEvent: false,\n    };\n    toggleModal(settings);\n  };\n\n  changeHandler = (e) => {\n    const elId = e.target.id;\n    const elValue = e.target.value;\n\n    if (elId === 'event_title') {\n      this.setState({ eventTitle: elValue });\n    } else if (elId === 'event_desc') {\n      this.setState({ eventDesc: elValue });\n    } \n  };\n\n  startDatePickerHandler = (date) => {\n    this.setState({ eventStart: date });\n  }\n\n  endDatePickerHandler = (date) => {\n    this.setState({ eventEnd: date });\n  }\n\n  validate = () => {\n    const {\n      editModal,\n      addEvent,\n      monthTimeSpan,\n      deleteEvent,\n      addModal,\n      getEvents,\n      selectedEvent,\n    } = this.props;\n    const { \n      eventTitle, \n      eventDesc, \n      eventStart, \n      eventEnd, \n    } = this.state;\n\n    const eventStartMoment = moment(eventStart, FORMAT, true);\n    const eventEndMoment = moment(eventEnd, FORMAT, true);\n    const validEventTitle = trim(eventTitle).length > 0;\n    const validEventDesc = trim(eventDesc).length > 0;\n\n    let valid = true;\n    if (!eventStartMoment.isValid()) {\n      valid = false;\n      this.setState({ eventStartInvalid: true });\n    }\n    if (!eventEndMoment.isValid()) {\n      valid = false;\n      this.setState({ eventEndInvalid: true });\n    }\n    if (!eventEndMoment.isSameOrAfter(eventStartMoment)) {\n      valid = false;\n      this.setState({ eventStartIsLater: true });\n    }\n    if (!validEventTitle) {\n      valid = false;\n      this.setState({ eventTitleInvalid: true });\n    }\n    if (!validEventDesc) {\n      valid = false;\n      this.setState({ eventDescInvalid: true });\n    }\n    \n\n    if (valid) {\n      const newEvent = {\n        event_title: eventTitle,\n        event_desc: eventDesc,\n        event_start: eventStart,\n        event_end: eventEnd,\n      };\n      this.setState({\n        eventStartInvalid: false,\n        eventEndInvalid: false,\n        eventStartIsLater: false,\n        eventTitleInvalid: false,\n        eventDescInvalid: false,\n      });\n      if (addModal) {\n        addEvent(newEvent);\n        getEvents(monthTimeSpan);\n        this.closeAddModalHandler();\n      } else if (editModal) {\n        deleteEvent(selectedEvent);\n        addEvent(newEvent);\n        getEvents(monthTimeSpan);\n        this.closeEditModalHandler();\n      }\n    }\n  };\n\n  renderForm = () => {\n    const {\n      eventTitle,\n      eventDesc,\n      eventStart, \n      eventEnd,\n      // eventStartInvalid,\n      // eventEndInvalid,\n      // eventStartIsLater,\n      eventTitleInvalid,\n      eventDescInvalid,\n    } = this.state;\n\n    return (\n      <div>\n        <div>\n          <TextField \n            label=\"Event title\"\n            onChange={this.changeHandler}\n            id=\"event_title\"\n            value={eventTitle}\n            fullWidth\n            error={eventTitleInvalid}\n          />\n        </div>\n        <div>\n          <DateTimePicker\n            label=\"Event start\"\n            invalidLabel=\"YYYY-MM-DD HH:mm:ss\"\n            value={eventStart}\n            onChange={this.startDatePickerHandler}\n            format={FORMAT}\n            clearable\n            fullWidth\n            dateRangeIcon={\n              <DateRange />\n            }\n            timeIcon={\n              <AccessTime />\n            }\n            leftArrowIcon={\n              <KeyboardArrowLeft />\n            }\n            rightArrowIcon={\n              <KeyboardArrowRight />\n            }\n          />\n        </div>\n        <div>\n          <DateTimePicker\n            label=\"Event end\"\n            invalidLabel=\"YYYY-MM-DD HH:mm:ss\"\n            value={eventEnd}\n            onChange={this.endDatePickerHandler}\n            format={FORMAT}\n            clearable\n            fullWidth\n            dateRangeIcon={\n              <DateRange />\n            }\n            timeIcon={\n              <AccessTime />\n            }\n            leftArrowIcon={\n              <KeyboardArrowLeft />\n            }\n            rightArrowIcon={\n              <KeyboardArrowRight />\n            }\n          />\n        </div>\n        <div>\n          <TextField \n            multiline={true}\n            rows={5}\n            label=\"Event description\"\n            onChange={this.changeHandler}\n            id=\"event_desc\"\n            value={eventDesc}\n            fullWidth\n            error={eventDescInvalid}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  renderAddModal = () => {\n    const { classes, addModal } = this.props;\n\n    return (\n      <Modal\n          open={addModal}\n          closeCallback={this.closeAddModalHandler}\n        >\n        <div className={classes.modal__content}>\n          <h2 className={classes.modal__title}>\n            Add New Event\n          </h2>\n          <div className={classes.modal__body}>\n            {this.renderForm()}\n          </div>\n          <div className={classes.modal__btn_wrapper}>\n            <Button \n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.validate}\n            >\n              Add event\n            </Button>\n            <Button onClick={this.closeAddModalHandler}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n\n  renderEditModal = () => {\n    const { classes, editModal } = this.props;\n\n    return (\n      <Modal\n        open={editModal}\n        closeCallback={this.closeEditModalHandler}\n      >\n        <div className={classes.modal__content}>\n          <h2 className={classes.modal__title}>\n            Edit Event\n          </h2>\n          <div className={classes.modal__body}>\n            {this.renderForm()}\n          </div>\n          <div className={classes.modal__btn_wrapper}>\n            <Button \n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.validate}\n            >\n              Edit event\n            </Button>\n            <Button onClick={this.closeEditModalHandler}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n\n  renderContent = () => {\n    const { editModal, addModal } = this.props;\n    if (editModal) {\n      return this.renderEditModal();\n    } else if (addModal) {\n      return this.renderAddModal();\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        {this.renderContent()}\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(editEventModalStyles)(EditEventModal);\n","export default (theme) => ({\n  modal__title: {\n    textAlign: 'center',\n  },\n  modal__content: {\n    width: '300px',\n    padding: '10px',\n    [theme.breakpoints.down('601')]: {\n      width: '100%',\n    },\n  },\n  modal__body: {\n    padding: '0 20px 20px',\n  },\n  modal__btn_wrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Paper } from '@material-ui/core';\nimport Calendar from '../components/Calendar';\nimport TotalEventsDayModal from '../components/TotalEventsDayModal';\nimport SingleEventModal from '../components/SingleEventModal';\nimport EditEventModal from '../components/EditEventModal';\nimport * as actions from '../actions';\nimport mainStyles from '../styles/main';\n\nconst FORMAT = 'DD-MM-YYYY';\n\nclass Main extends Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    selectedDay: PropTypes.array,\n    selectedEvent: PropTypes.object,\n    events: PropTypes.array,\n    monthTimeSpan: PropTypes.object,\n    modalState: PropTypes.object,\n  };\n\n  state = {\n    dayToAddEvents: null,\n  }\n\n  addEventHandler = (day) => {\n    const { toggleModal } = this.props;\n    const settings = {\n      addEvent: true,\n    };\n    \n    if (day) {\n      this.setState({ dayToAddEvents: day });\n    } else {\n      this.setState({ dayToAddEvents: null });\n    }\n    toggleModal(settings);\n  };\n  \n  render() {\n    const { dayToAddEvents } = this.state;\n    const {\n      classes,\n      getEvents,\n      events,\n      toggleModal,\n      selectDay,\n      modalState,\n      deleteEvent,\n      selectedDay,\n      selectEvent,\n      selectedEvent,\n      addEvent,\n      monthTimeSpan,\n    } = this.props;\n    \n    return (\n      <Fragment>\n        <div className={classes.main_container}>\n          <Paper\n            elevation={10}\n            className={classes.root}\n          > \n            <Calendar \n              format={FORMAT}\n              events={events}\n              getEvents={getEvents}\n              toggleModal={toggleModal}\n              selectDay={selectDay}\n              selectedDay={selectedDay}\n              addEventHandler={this.addEventHandler}\n            />\n            <div>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => this.addEventHandler()}>\n                Add event\n              </Button>\n            </div>\n          </Paper>\n        </div>\n        {modalState && modalState.totalDayEvents && \n        <TotalEventsDayModal\n          open={modalState.totalDayEvents}\n          toggleModal={toggleModal}\n          selectedDay={selectedDay}\n          selectEvent={selectEvent}\n          selectedEvent={selectedEvent}\n          addEventHandler={this.addEventHandler}\n          modalState={modalState}\n        />}\n        {modalState && modalState.singleEvent && \n        <SingleEventModal\n          open={modalState.singleEvent}\n          toggleModal={toggleModal}\n          selectedEvent={selectedEvent}\n          deleteEvent={deleteEvent}\n          monthTimeSpan={monthTimeSpan}\n          getEvents={getEvents}\n        />}\n        {modalState && (modalState.addEvent || modalState.editEvent) &&\n        <EditEventModal \n          toggleModal={toggleModal}\n          editModal={modalState.editEvent}\n          addModal={modalState.addEvent}\n          addEvent={addEvent}\n          getEvents={getEvents}\n          deleteEvent={deleteEvent}\n          monthTimeSpan={monthTimeSpan}\n          selectedEvent={selectedEvent}\n          dayToAddEvents={dayToAddEvents}\n        />}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { webDatabase, modalState } = state;\n  return {\n    selectedDay: webDatabase.selectedDay,\n    selectedEvent: webDatabase.selectedEvent,\n    events: webDatabase.events,\n    monthTimeSpan: webDatabase.currentMonthTimeSpan,  \n    modalState,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getEvents: (monthPeriod) => {\n      dispatch(actions.getEvents(monthPeriod));\n    },\n    addEvent: (event) => {\n      console.log('event', event);\n      dispatch(actions.addEvent(event));\n    },\n    deleteEvent: (event) => {\n      dispatch(actions.deleteEvent(event));\n    },\n    selectDay: (day) => {\n      dispatch(actions.selectDay(day));\n    },\n    selectEvent: (event) => {\n      if (event) {\n        dispatch(actions.selectEvent(event));\n      }\n    },\n    toggleModal: (settings) => {\n      dispatch(actions.toggleModal(settings));\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(mainStyles)(Main));\n","import { \n  GET_EVENTS,\n  SELECTED_DAY,\n  SELECTED_EVENT,\n  ADD_EVENT,\n  DELETE_EVENT,\n} from './index';\n\nfunction getEvents(monthPeriod) {\n  return {\n    type: GET_EVENTS,\n    monthPeriod,\n  };\n}\n\nfunction addEvent(event) {\n  return {\n    type: ADD_EVENT,\n    event,\n  };\n}\n\nfunction deleteEvent(event) {\n  return {\n    type: DELETE_EVENT,\n    event,\n  };\n}\n\nfunction selectDay(day) {\n  return {\n    type: SELECTED_DAY,\n    day,\n  }\n}\n\nfunction selectEvent(event) {\n  return {\n    type: SELECTED_EVENT,\n    event,\n  };\n}\n\nexport {\n  getEvents,\n  selectDay,\n  selectEvent,\n  addEvent,\n  deleteEvent,\n};\n","import { TOGGLE_MODAL } from './index';\n\nfunction toggleModal(settings) {\n  return {\n    type: TOGGLE_MODAL,\n    settings,\n  };\n}\n\nexport {\n  toggleModal,\n};\n","export default (theme) => ({\n  root: {\n    width: '80%',\n    maxWidth: '1500px',\n    margin: '30px auto 0',\n    padding: '20px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      margin: '0 auto',\n      padding: '12px',\n    },\n  },\n});\n","import React, { Component, Fragment } from 'react';\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Typography>\n          <Main />\n        </Typography>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n// import logger from 'redux-logger'\nimport * as serviceWorker from './serviceWorker';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/MuiPickersUtilsProvider';\nimport MomentUtils from 'material-ui-pickers/utils/moment-utils';\nimport theme from './styles/theme';\nimport rootReducer from './reducers'\nimport App from './containers/App';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger');\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...middlewares)\n);\n\nReactDOM.render(\n  <Fragment>\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <App />\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    </Provider>\n  </Fragment>,\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}